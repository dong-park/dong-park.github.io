// Define variables for colors and fonts
$blockquote-background: #f9f9f9;
$blockquote-border-color: #ccc;
$code-text-color: #d14; // A shade of red for text
$code-font-family: 'Courier New', Courier, monospace; // Monospace font for code

:global(.main) {

}

:global(li::marker) {
  color: var(--gray-500);
}

:global(.post-content) {

  :global(*) {
    @apply text-black;
    letter-spacing: 0px;

    @screen sm {
      line-height: 1.6;
    }
  }

  :global(h1),
  :global(h2),
  :global(h3),
  :global(h4),
  :global(h5),
  :global(h6) {
    margin-top: -60px;
    @apply pt-[75px];
    @apply sm:pt-[85px];
    font-family: var(--font-serif);
    font-weight: 600;
  }

  @mixin font-style($weight, $family: var(--font-sans)) {
    font-family: $family;
    font-weight: $weight;
  }

  :global(strong) {
    font-weight: 500;
  }

  :global(h1) {
    font-size: 1.6em;
  }

  :global(h2) {
    font-size: 1.5em;
  }

  :global(h3) {
    font-size: 1.2em;
  }

  :global(h4) {
    font-size: 1.0em;
    @apply italic;
  }

  :global(p) {
    @apply sm:text-xl;
    @apply my-2;
    @apply sm:mt-5;
    :global(a) {
      line-height: 2.1;
    }
  }

  :global(h1 + p),
  :global(h2 + p),
  :global(h3 + p),
  :global(h4 + p),
  :global(h5 + p),
  :global(h6 + p) {
    @apply my-1; /* Tailwind의 유틸리티 클래스를 사용하여 마진 제거 */
  }

  :global(ol),
  :global(ul) {
    @apply mt-2;
  }

  :global(p), :global(li) {
    font-family: var(--font-serif);
    font-weight: 350;
  }

  :global(blockquote) {
    padding: 0.5em 10px;
    background-color: $blockquote-background;
    border-left: 5px solid $blockquote-border-color;
  }

  :global(pre) {
    @apply font-mono;
    @apply text-sm;
    @apply bg-gray-100;
    @apply p-4;
    @apply rounded-md;
    @apply overflow-x-auto;
    @apply mb-4;
    width: 100%;
    white-space: pre-wrap;
    word-wrap: break-word;
  }

  :global(ul) {
    @apply list-disc;
    @apply pl-6;
  }

  :global(ol) {
    @apply list-decimal;
    @apply pl-6;
  }

  :global(p) > :global(a) {
    text-decoration-line: underline;
    text-decoration-color: var(--border);
    text-decoration-thickness: 1px;
    text-underline-offset: 4px;
  }

  :global(p) > :global(a)::after {
    margin: 0;
    content: '';
    display: inline-block;
    width: 0.85rem; /* Width of the icon */
    height: 0.85rem; /* Height of the icon */
    background: url('/icons/link.svg'); /* Path to your SVG icon */
    background-size: cover;
    background-repeat: no-repeat;
    @apply text-center p-1;
  }

  :global(hr) {
    @apply my-5;
  }

  :global(img) {
    @apply shadow my-2;
    @apply md:max-w-sm;
  }

  :global(.token) {
    @apply text-sm;
    @apply font-extralight;
  }

  :global(.token.keyword) {
    @apply text-yellow-600;
  }

  :global(.token.class-name) {
    @apply text-yellow-700 font-bold;
  }

  :global(.token.punctuation) {
    @apply text-gray-500;
  }

  :global(.token.function) {

  }

  :global(.token.comment) {
    @apply font-extralight text-gray-800;
  }

  :global(.language-name) {
    @apply absolute right-3;
    @apply text-xs;
    @apply font-mono;
    @apply font-bold;
    @apply text-gray-600;
  }
}
